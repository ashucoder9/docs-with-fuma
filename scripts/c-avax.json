{
  "openapi": "3.0.3",
  "info": {
    "title": "Avalanche Specific APIs Playground",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.avax.network"
    }
  ],
  "paths": {
    "/ext/bc/C/avax": {
      "post": {
        "summary": "",
        "description": "This document is autogenerated from the [C-Chain API](https://docs.avax.network/docs/api-reference/c-chain/api) documentation. It shows examples of how to interact with Avalanche-specific APIs on the C-Chain.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number",
                    "example": 1
                  },
                  "jsonrpc": {
                    "type": "string",
                    "example": "2.0"
                  },
                  "method": {
                    "type": "string",
                    "example": "avax.issueTx"
                  },
                  "params": {
                    "type": "object",
                    "properties": {
                      "encoding": {
                        "type": "string",
                        "example": "hex"
                      },
                      "tx": {
                        "type": "string",
                        "example": "0x00"
                      }
                    }
                  }
                }
              },
              "examples": {
                "export": {
                  "value": {
                    "id": 1,
                    "jsonrpc": "2.0",
                    "method": "avax.export",
                    "params": {
                      "amount": 25,
                      "assetID": "FSznYPiqrJ3WtGurw54re47oDpGXQ8THc8yZ4fEDX4G8cGqbn",
                      "changeAddr": "{{cchainAddress}}",
                      "from": [
                        "{{cchainAddress}}"
                      ],
                      "password": "{{avalanchePassword}}",
                      "to": "{{xchainAddress}}",
                      "username": "{{avalancheUsername}}"
                    }
                  }
                },
                "exportAVAX": {
                  "value": {
                    "id": 1,
                    "jsonrpc": "2.0",
                    "method": "avax.exportAVAX",
                    "params": {
                      "amount": 999000000,
                      "changeAddr": "{{cchainAddress}}",
                      "destinationChain": "X",
                      "from": [
                        "{{cchainAddress}}"
                      ],
                      "password": "{{avalanchePassword}}",
                      "to": "{{xchainAddress}}",
                      "username": "{{avalancheUsername}}"
                    }
                  }
                },
                "exportKey": {
                  "value": {
                    "id": 1,
                    "jsonrpc": "2.0",
                    "method": "avax.exportKey",
                    "params": {
                      "address": "{{cchainAddress}}",
                      "password": "{{avalanchePassword}}",
                      "username": "{{avalancheUsername}}"
                    }
                  }
                },
                "getAtomicTx": {
                  "value": "{\n    \"jsonrpc\":\"2.0\",\n    \"id\"     :1,\n    \"method\" :\"avax.getAtomicTx\",\n    \"params\" :{\n        \"txID\":\"9zX25brVj24xMBXJFw973MGVgkuDwvFPyBQoqo4pLye5mBkhN\",\n        \"encoding\": \"hex\"\n    }\n}\n\n//choose \"Visualize\" from the output section to see the decoded tx"
                },
                "getAtomicTxStatus": {
                  "value": {
                    "id": 1,
                    "jsonrpc": "2.0",
                    "method": "avax.getAtomicTxStatus",
                    "params": {
                      "txID": "n1D9UkjiryEBtW8qznD1TDkGEuYRFj5tLaS8NhVpMLYsx1FHa"
                    }
                  }
                },
                "getUTXOs": {
                  "value": {
                    "id": 1,
                    "jsonrpc": "2.0",
                    "method": "avax.getUTXOs",
                    "params": {
                      "addresses": [
                        "{{cchainbech32address}}"
                      ],
                      "encoding": "hex",
                      "limit": 5,
                      "sourceChain": "X"
                    }
                  }
                },
                "import": {
                  "value": {
                    "id": 1,
                    "jsonrpc": "2.0",
                    "method": "avax.import",
                    "params": {
                      "password": "{{avalanchePassword}}",
                      "sourceChain": "X",
                      "to": "{{cchainAddress}}",
                      "username": "{{avalancheUsername}}"
                    }
                  }
                },
                "importAVAX": {
                  "value": {
                    "id": 1,
                    "jsonrpc": "2.0",
                    "method": "avax.importAVAX",
                    "params": {
                      "password": "{{avalanchePassword}}",
                      "sourceChain": "X",
                      "to": "{{cchainAddress}}",
                      "username": "{{avalancheUsername}}"
                    }
                  }
                },
                "importKey": {
                  "value": {
                    "id": 1,
                    "jsonrpc": "2.0",
                    "method": "avax.importKey",
                    "params": {
                      "password": "{{avalanchePassword}}",
                      "privateKey": "{{privkey}}",
                      "username": "{{avalancheUsername}}"
                    }
                  }
                },
                "issueTx": {
                  "value": {
                    "id": 1,
                    "jsonrpc": "2.0",
                    "method": "avax.issueTx",
                    "params": {
                      "encoding": "hex",
                      "tx": "0x00"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
}
}